// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`Dashboard component Should render formik filters form correctly 1`] = `
ShallowWrapper {
  Symbol(enzyme.__root__): [Circular],
  Symbol(enzyme.__unrendered__): <WithFormik(DashboardFilters) />,
  Symbol(enzyme.__renderer__): Object {
    "batchedUpdates": [Function],
    "checkPropTypes": [Function],
    "getNode": [Function],
    "render": [Function],
    "simulateError": [Function],
    "simulateEvent": [Function],
    "unmount": [Function],
  },
  Symbol(enzyme.__node__): Object {
    "instance": null,
    "key": undefined,
    "nodeType": "class",
    "props": Object {
      "enableReinitialize": false,
      "handleSubmit": [Function],
      "initialStatus": undefined,
      "initialValues": Object {
        "age": "none",
        "name": "",
        "position": "none",
      },
      "isInitialValid": false,
      "onSubmit": [Function],
      "render": [Function],
      "validate": undefined,
      "validateOnBlur": true,
      "validateOnChange": true,
      "validationSchema": [Function],
    },
    "ref": null,
    "rendered": null,
    "type": [Function],
  },
  Symbol(enzyme.__nodes__): Array [
    Object {
      "instance": null,
      "key": undefined,
      "nodeType": "class",
      "props": Object {
        "enableReinitialize": false,
        "handleSubmit": [Function],
        "initialStatus": undefined,
        "initialValues": Object {
          "age": "none",
          "name": "",
          "position": "none",
        },
        "isInitialValid": false,
        "onSubmit": [Function],
        "render": [Function],
        "validate": undefined,
        "validateOnBlur": true,
        "validateOnChange": true,
        "validationSchema": [Function],
      },
      "ref": null,
      "rendered": null,
      "type": [Function],
    },
  ],
  Symbol(enzyme.__options__): Object {
    "adapter": ReactSixteenAdapter {
      "options": Object {
        "enableComponentDidUpdateOnSetState": true,
        "legacyContextMode": "parent",
        "lifecycles": Object {
          "componentDidUpdate": Object {
            "onSetState": true,
          },
          "getChildContext": Object {
            "calledByRenderer": false,
          },
          "getDerivedStateFromProps": Object {
            "hasShouldComponentUpdateBug": false,
          },
          "getSnapshotBeforeUpdate": true,
          "setState": Object {
            "skipsComponentDidUpdateOnNullish": true,
          },
        },
      },
    },
  },
  Symbol(enzyme.__childContext__): null,
}
`;

exports[`Dashboard component Should render formik inner form correctly 1`] = `
ShallowWrapper {
  Symbol(enzyme.__root__): [Circular],
  Symbol(enzyme.__unrendered__): <DashboardFilters
    errors={Object {}}
    handleChange={[MockFunction]}
    handleSubmit={[MockFunction]}
    values={Object {}}
  />,
  Symbol(enzyme.__renderer__): Object {
    "batchedUpdates": [Function],
    "checkPropTypes": [Function],
    "getNode": [Function],
    "render": [Function],
    "simulateError": [Function],
    "simulateEvent": [Function],
    "unmount": [Function],
  },
  Symbol(enzyme.__node__): Object {
    "instance": null,
    "key": undefined,
    "nodeType": "class",
    "props": Object {
      "children": Array [
        <WithStyles(Grid)
          item={true}
          md={3}
          xs={12}
        >
          <TextField
            error={false}
            fullWidth={true}
            label="Nombre"
            name="name"
            onChange={[MockFunction]}
            placeholder="Name"
            required={false}
            select={false}
            variant="standard"
          />
        </WithStyles(Grid)>,
        <WithStyles(Grid)
          item={true}
          md={3}
          xs={12}
        >
          <TextField
            fullWidth={true}
            label="Age"
            name="age"
            onChange={[MockFunction]}
            required={false}
            select={true}
            variant="standard"
          >
            <WithStyles(MenuItem)
              value="none"
            >
               
            </WithStyles(MenuItem)>
            <WithStyles(MenuItem)
              value={18}
            >
              18
            </WithStyles(MenuItem)>
            <WithStyles(MenuItem)
              value={19}
            >
              19
            </WithStyles(MenuItem)>
            <WithStyles(MenuItem)
              value={20}
            >
              20
            </WithStyles(MenuItem)>
            <WithStyles(MenuItem)
              value={21}
            >
              21
            </WithStyles(MenuItem)>
            <WithStyles(MenuItem)
              value={22}
            >
              22
            </WithStyles(MenuItem)>
            <WithStyles(MenuItem)
              value={23}
            >
              23
            </WithStyles(MenuItem)>
            <WithStyles(MenuItem)
              value={24}
            >
              24
            </WithStyles(MenuItem)>
            <WithStyles(MenuItem)
              value={25}
            >
              25
            </WithStyles(MenuItem)>
            <WithStyles(MenuItem)
              value={26}
            >
              26
            </WithStyles(MenuItem)>
            <WithStyles(MenuItem)
              value={27}
            >
              27
            </WithStyles(MenuItem)>
            <WithStyles(MenuItem)
              value={28}
            >
              28
            </WithStyles(MenuItem)>
            <WithStyles(MenuItem)
              value={29}
            >
              29
            </WithStyles(MenuItem)>
            <WithStyles(MenuItem)
              value={30}
            >
              30
            </WithStyles(MenuItem)>
            <WithStyles(MenuItem)
              value={31}
            >
              31
            </WithStyles(MenuItem)>
            <WithStyles(MenuItem)
              value={32}
            >
              32
            </WithStyles(MenuItem)>
            <WithStyles(MenuItem)
              value={33}
            >
              33
            </WithStyles(MenuItem)>
            <WithStyles(MenuItem)
              value={34}
            >
              34
            </WithStyles(MenuItem)>
            <WithStyles(MenuItem)
              value={35}
            >
              35
            </WithStyles(MenuItem)>
            <WithStyles(MenuItem)
              value={36}
            >
              36
            </WithStyles(MenuItem)>
            <WithStyles(MenuItem)
              value={37}
            >
              37
            </WithStyles(MenuItem)>
            <WithStyles(MenuItem)
              value={38}
            >
              38
            </WithStyles(MenuItem)>
            <WithStyles(MenuItem)
              value={39}
            >
              39
            </WithStyles(MenuItem)>
            <WithStyles(MenuItem)
              value={40}
            >
              40
            </WithStyles(MenuItem)>
          </TextField>
        </WithStyles(Grid)>,
        <WithStyles(Grid)
          item={true}
          md={3}
          xs={12}
        >
          <TextField
            fullWidth={true}
            label="Position"
            name="position"
            onChange={[MockFunction]}
            required={false}
            select={true}
            variant="standard"
          >
            <WithStyles(MenuItem)
              value="none"
            >
               
            </WithStyles(MenuItem)>
            <WithStyles(MenuItem)
              value="Attacking Midfield"
            >
              Attacking Midfield
            </WithStyles(MenuItem)>
            <WithStyles(MenuItem)
              value="Central Midfield"
            >
              Central Midfield
            </WithStyles(MenuItem)>
            <WithStyles(MenuItem)
              value="Centre-Back"
            >
              Centre-Back
            </WithStyles(MenuItem)>
            <WithStyles(MenuItem)
              value="Centre-Forward"
            >
              Centre-Forward
            </WithStyles(MenuItem)>
            <WithStyles(MenuItem)
              value="Defensive Midfield"
            >
              Defensive Midfield
            </WithStyles(MenuItem)>
            <WithStyles(MenuItem)
              value="Keeper"
            >
              Keeper
            </WithStyles(MenuItem)>
            <WithStyles(MenuItem)
              value="Left Midfield"
            >
              Left Midfield
            </WithStyles(MenuItem)>
            <WithStyles(MenuItem)
              value="Left Wing"
            >
              Left Wing
            </WithStyles(MenuItem)>
            <WithStyles(MenuItem)
              value="Left-Back"
            >
              Left-Back
            </WithStyles(MenuItem)>
            <WithStyles(MenuItem)
              value="Right-Back"
            >
              Right-Back
            </WithStyles(MenuItem)>
          </TextField>
        </WithStyles(Grid)>,
        <WithStyles(Grid)
          item={true}
          md={3}
          xs={12}
        >
          <WithStyles(Button)
            fullWidth={true}
            onClick={[MockFunction]}
            size="large"
            type="submit"
          >
            Search
          </WithStyles(Button)>
        </WithStyles(Grid)>,
      ],
      "container": true,
      "justify": "center",
      "spacing": 16,
    },
    "ref": null,
    "rendered": Array [
      Object {
        "instance": null,
        "key": undefined,
        "nodeType": "class",
        "props": Object {
          "children": <TextField
            error={false}
            fullWidth={true}
            label="Nombre"
            name="name"
            onChange={[MockFunction]}
            placeholder="Name"
            required={false}
            select={false}
            variant="standard"
          />,
          "item": true,
          "md": 3,
          "xs": 12,
        },
        "ref": null,
        "rendered": Object {
          "instance": null,
          "key": undefined,
          "nodeType": "class",
          "props": Object {
            "error": false,
            "fullWidth": true,
            "label": "Nombre",
            "name": "name",
            "onChange": [MockFunction],
            "placeholder": "Name",
            "required": false,
            "select": false,
            "value": undefined,
            "variant": "standard",
          },
          "ref": null,
          "rendered": null,
          "type": [Function],
        },
        "type": [Function],
      },
      Object {
        "instance": null,
        "key": undefined,
        "nodeType": "class",
        "props": Object {
          "children": <TextField
            fullWidth={true}
            label="Age"
            name="age"
            onChange={[MockFunction]}
            required={false}
            select={true}
            variant="standard"
          >
            <WithStyles(MenuItem)
              value="none"
            >
               
            </WithStyles(MenuItem)>
            <WithStyles(MenuItem)
              value={18}
            >
              18
            </WithStyles(MenuItem)>
            <WithStyles(MenuItem)
              value={19}
            >
              19
            </WithStyles(MenuItem)>
            <WithStyles(MenuItem)
              value={20}
            >
              20
            </WithStyles(MenuItem)>
            <WithStyles(MenuItem)
              value={21}
            >
              21
            </WithStyles(MenuItem)>
            <WithStyles(MenuItem)
              value={22}
            >
              22
            </WithStyles(MenuItem)>
            <WithStyles(MenuItem)
              value={23}
            >
              23
            </WithStyles(MenuItem)>
            <WithStyles(MenuItem)
              value={24}
            >
              24
            </WithStyles(MenuItem)>
            <WithStyles(MenuItem)
              value={25}
            >
              25
            </WithStyles(MenuItem)>
            <WithStyles(MenuItem)
              value={26}
            >
              26
            </WithStyles(MenuItem)>
            <WithStyles(MenuItem)
              value={27}
            >
              27
            </WithStyles(MenuItem)>
            <WithStyles(MenuItem)
              value={28}
            >
              28
            </WithStyles(MenuItem)>
            <WithStyles(MenuItem)
              value={29}
            >
              29
            </WithStyles(MenuItem)>
            <WithStyles(MenuItem)
              value={30}
            >
              30
            </WithStyles(MenuItem)>
            <WithStyles(MenuItem)
              value={31}
            >
              31
            </WithStyles(MenuItem)>
            <WithStyles(MenuItem)
              value={32}
            >
              32
            </WithStyles(MenuItem)>
            <WithStyles(MenuItem)
              value={33}
            >
              33
            </WithStyles(MenuItem)>
            <WithStyles(MenuItem)
              value={34}
            >
              34
            </WithStyles(MenuItem)>
            <WithStyles(MenuItem)
              value={35}
            >
              35
            </WithStyles(MenuItem)>
            <WithStyles(MenuItem)
              value={36}
            >
              36
            </WithStyles(MenuItem)>
            <WithStyles(MenuItem)
              value={37}
            >
              37
            </WithStyles(MenuItem)>
            <WithStyles(MenuItem)
              value={38}
            >
              38
            </WithStyles(MenuItem)>
            <WithStyles(MenuItem)
              value={39}
            >
              39
            </WithStyles(MenuItem)>
            <WithStyles(MenuItem)
              value={40}
            >
              40
            </WithStyles(MenuItem)>
          </TextField>,
          "item": true,
          "md": 3,
          "xs": 12,
        },
        "ref": null,
        "rendered": Object {
          "instance": null,
          "key": undefined,
          "nodeType": "class",
          "props": Object {
            "children": Array [
              <WithStyles(MenuItem)
                value="none"
              >
                 
              </WithStyles(MenuItem)>,
              Array [
                <WithStyles(MenuItem)
                  value={18}
                >
                  18
                </WithStyles(MenuItem)>,
                <WithStyles(MenuItem)
                  value={19}
                >
                  19
                </WithStyles(MenuItem)>,
                <WithStyles(MenuItem)
                  value={20}
                >
                  20
                </WithStyles(MenuItem)>,
                <WithStyles(MenuItem)
                  value={21}
                >
                  21
                </WithStyles(MenuItem)>,
                <WithStyles(MenuItem)
                  value={22}
                >
                  22
                </WithStyles(MenuItem)>,
                <WithStyles(MenuItem)
                  value={23}
                >
                  23
                </WithStyles(MenuItem)>,
                <WithStyles(MenuItem)
                  value={24}
                >
                  24
                </WithStyles(MenuItem)>,
                <WithStyles(MenuItem)
                  value={25}
                >
                  25
                </WithStyles(MenuItem)>,
                <WithStyles(MenuItem)
                  value={26}
                >
                  26
                </WithStyles(MenuItem)>,
                <WithStyles(MenuItem)
                  value={27}
                >
                  27
                </WithStyles(MenuItem)>,
                <WithStyles(MenuItem)
                  value={28}
                >
                  28
                </WithStyles(MenuItem)>,
                <WithStyles(MenuItem)
                  value={29}
                >
                  29
                </WithStyles(MenuItem)>,
                <WithStyles(MenuItem)
                  value={30}
                >
                  30
                </WithStyles(MenuItem)>,
                <WithStyles(MenuItem)
                  value={31}
                >
                  31
                </WithStyles(MenuItem)>,
                <WithStyles(MenuItem)
                  value={32}
                >
                  32
                </WithStyles(MenuItem)>,
                <WithStyles(MenuItem)
                  value={33}
                >
                  33
                </WithStyles(MenuItem)>,
                <WithStyles(MenuItem)
                  value={34}
                >
                  34
                </WithStyles(MenuItem)>,
                <WithStyles(MenuItem)
                  value={35}
                >
                  35
                </WithStyles(MenuItem)>,
                <WithStyles(MenuItem)
                  value={36}
                >
                  36
                </WithStyles(MenuItem)>,
                <WithStyles(MenuItem)
                  value={37}
                >
                  37
                </WithStyles(MenuItem)>,
                <WithStyles(MenuItem)
                  value={38}
                >
                  38
                </WithStyles(MenuItem)>,
                <WithStyles(MenuItem)
                  value={39}
                >
                  39
                </WithStyles(MenuItem)>,
                <WithStyles(MenuItem)
                  value={40}
                >
                  40
                </WithStyles(MenuItem)>,
              ],
            ],
            "fullWidth": true,
            "label": "Age",
            "name": "age",
            "onChange": [MockFunction],
            "required": false,
            "select": true,
            "value": undefined,
            "variant": "standard",
          },
          "ref": null,
          "rendered": Array [
            Object {
              "instance": null,
              "key": undefined,
              "nodeType": "class",
              "props": Object {
                "children": " ",
                "value": "none",
              },
              "ref": null,
              "rendered": " ",
              "type": [Function],
            },
            Object {
              "instance": null,
              "key": "18",
              "nodeType": "class",
              "props": Object {
                "children": 18,
                "value": 18,
              },
              "ref": null,
              "rendered": 18,
              "type": [Function],
            },
            Object {
              "instance": null,
              "key": "19",
              "nodeType": "class",
              "props": Object {
                "children": 19,
                "value": 19,
              },
              "ref": null,
              "rendered": 19,
              "type": [Function],
            },
            Object {
              "instance": null,
              "key": "20",
              "nodeType": "class",
              "props": Object {
                "children": 20,
                "value": 20,
              },
              "ref": null,
              "rendered": 20,
              "type": [Function],
            },
            Object {
              "instance": null,
              "key": "21",
              "nodeType": "class",
              "props": Object {
                "children": 21,
                "value": 21,
              },
              "ref": null,
              "rendered": 21,
              "type": [Function],
            },
            Object {
              "instance": null,
              "key": "22",
              "nodeType": "class",
              "props": Object {
                "children": 22,
                "value": 22,
              },
              "ref": null,
              "rendered": 22,
              "type": [Function],
            },
            Object {
              "instance": null,
              "key": "23",
              "nodeType": "class",
              "props": Object {
                "children": 23,
                "value": 23,
              },
              "ref": null,
              "rendered": 23,
              "type": [Function],
            },
            Object {
              "instance": null,
              "key": "24",
              "nodeType": "class",
              "props": Object {
                "children": 24,
                "value": 24,
              },
              "ref": null,
              "rendered": 24,
              "type": [Function],
            },
            Object {
              "instance": null,
              "key": "25",
              "nodeType": "class",
              "props": Object {
                "children": 25,
                "value": 25,
              },
              "ref": null,
              "rendered": 25,
              "type": [Function],
            },
            Object {
              "instance": null,
              "key": "26",
              "nodeType": "class",
              "props": Object {
                "children": 26,
                "value": 26,
              },
              "ref": null,
              "rendered": 26,
              "type": [Function],
            },
            Object {
              "instance": null,
              "key": "27",
              "nodeType": "class",
              "props": Object {
                "children": 27,
                "value": 27,
              },
              "ref": null,
              "rendered": 27,
              "type": [Function],
            },
            Object {
              "instance": null,
              "key": "28",
              "nodeType": "class",
              "props": Object {
                "children": 28,
                "value": 28,
              },
              "ref": null,
              "rendered": 28,
              "type": [Function],
            },
            Object {
              "instance": null,
              "key": "29",
              "nodeType": "class",
              "props": Object {
                "children": 29,
                "value": 29,
              },
              "ref": null,
              "rendered": 29,
              "type": [Function],
            },
            Object {
              "instance": null,
              "key": "30",
              "nodeType": "class",
              "props": Object {
                "children": 30,
                "value": 30,
              },
              "ref": null,
              "rendered": 30,
              "type": [Function],
            },
            Object {
              "instance": null,
              "key": "31",
              "nodeType": "class",
              "props": Object {
                "children": 31,
                "value": 31,
              },
              "ref": null,
              "rendered": 31,
              "type": [Function],
            },
            Object {
              "instance": null,
              "key": "32",
              "nodeType": "class",
              "props": Object {
                "children": 32,
                "value": 32,
              },
              "ref": null,
              "rendered": 32,
              "type": [Function],
            },
            Object {
              "instance": null,
              "key": "33",
              "nodeType": "class",
              "props": Object {
                "children": 33,
                "value": 33,
              },
              "ref": null,
              "rendered": 33,
              "type": [Function],
            },
            Object {
              "instance": null,
              "key": "34",
              "nodeType": "class",
              "props": Object {
                "children": 34,
                "value": 34,
              },
              "ref": null,
              "rendered": 34,
              "type": [Function],
            },
            Object {
              "instance": null,
              "key": "35",
              "nodeType": "class",
              "props": Object {
                "children": 35,
                "value": 35,
              },
              "ref": null,
              "rendered": 35,
              "type": [Function],
            },
            Object {
              "instance": null,
              "key": "36",
              "nodeType": "class",
              "props": Object {
                "children": 36,
                "value": 36,
              },
              "ref": null,
              "rendered": 36,
              "type": [Function],
            },
            Object {
              "instance": null,
              "key": "37",
              "nodeType": "class",
              "props": Object {
                "children": 37,
                "value": 37,
              },
              "ref": null,
              "rendered": 37,
              "type": [Function],
            },
            Object {
              "instance": null,
              "key": "38",
              "nodeType": "class",
              "props": Object {
                "children": 38,
                "value": 38,
              },
              "ref": null,
              "rendered": 38,
              "type": [Function],
            },
            Object {
              "instance": null,
              "key": "39",
              "nodeType": "class",
              "props": Object {
                "children": 39,
                "value": 39,
              },
              "ref": null,
              "rendered": 39,
              "type": [Function],
            },
            Object {
              "instance": null,
              "key": "40",
              "nodeType": "class",
              "props": Object {
                "children": 40,
                "value": 40,
              },
              "ref": null,
              "rendered": 40,
              "type": [Function],
            },
          ],
          "type": [Function],
        },
        "type": [Function],
      },
      Object {
        "instance": null,
        "key": undefined,
        "nodeType": "class",
        "props": Object {
          "children": <TextField
            fullWidth={true}
            label="Position"
            name="position"
            onChange={[MockFunction]}
            required={false}
            select={true}
            variant="standard"
          >
            <WithStyles(MenuItem)
              value="none"
            >
               
            </WithStyles(MenuItem)>
            <WithStyles(MenuItem)
              value="Attacking Midfield"
            >
              Attacking Midfield
            </WithStyles(MenuItem)>
            <WithStyles(MenuItem)
              value="Central Midfield"
            >
              Central Midfield
            </WithStyles(MenuItem)>
            <WithStyles(MenuItem)
              value="Centre-Back"
            >
              Centre-Back
            </WithStyles(MenuItem)>
            <WithStyles(MenuItem)
              value="Centre-Forward"
            >
              Centre-Forward
            </WithStyles(MenuItem)>
            <WithStyles(MenuItem)
              value="Defensive Midfield"
            >
              Defensive Midfield
            </WithStyles(MenuItem)>
            <WithStyles(MenuItem)
              value="Keeper"
            >
              Keeper
            </WithStyles(MenuItem)>
            <WithStyles(MenuItem)
              value="Left Midfield"
            >
              Left Midfield
            </WithStyles(MenuItem)>
            <WithStyles(MenuItem)
              value="Left Wing"
            >
              Left Wing
            </WithStyles(MenuItem)>
            <WithStyles(MenuItem)
              value="Left-Back"
            >
              Left-Back
            </WithStyles(MenuItem)>
            <WithStyles(MenuItem)
              value="Right-Back"
            >
              Right-Back
            </WithStyles(MenuItem)>
          </TextField>,
          "item": true,
          "md": 3,
          "xs": 12,
        },
        "ref": null,
        "rendered": Object {
          "instance": null,
          "key": undefined,
          "nodeType": "class",
          "props": Object {
            "children": Array [
              <WithStyles(MenuItem)
                value="none"
              >
                 
              </WithStyles(MenuItem)>,
              Array [
                <WithStyles(MenuItem)
                  value="Attacking Midfield"
                >
                  Attacking Midfield
                </WithStyles(MenuItem)>,
                <WithStyles(MenuItem)
                  value="Central Midfield"
                >
                  Central Midfield
                </WithStyles(MenuItem)>,
                <WithStyles(MenuItem)
                  value="Centre-Back"
                >
                  Centre-Back
                </WithStyles(MenuItem)>,
                <WithStyles(MenuItem)
                  value="Centre-Forward"
                >
                  Centre-Forward
                </WithStyles(MenuItem)>,
                <WithStyles(MenuItem)
                  value="Defensive Midfield"
                >
                  Defensive Midfield
                </WithStyles(MenuItem)>,
                <WithStyles(MenuItem)
                  value="Keeper"
                >
                  Keeper
                </WithStyles(MenuItem)>,
                <WithStyles(MenuItem)
                  value="Left Midfield"
                >
                  Left Midfield
                </WithStyles(MenuItem)>,
                <WithStyles(MenuItem)
                  value="Left Wing"
                >
                  Left Wing
                </WithStyles(MenuItem)>,
                <WithStyles(MenuItem)
                  value="Left-Back"
                >
                  Left-Back
                </WithStyles(MenuItem)>,
                <WithStyles(MenuItem)
                  value="Right-Back"
                >
                  Right-Back
                </WithStyles(MenuItem)>,
              ],
            ],
            "fullWidth": true,
            "label": "Position",
            "name": "position",
            "onChange": [MockFunction],
            "required": false,
            "select": true,
            "value": undefined,
            "variant": "standard",
          },
          "ref": null,
          "rendered": Array [
            Object {
              "instance": null,
              "key": undefined,
              "nodeType": "class",
              "props": Object {
                "children": " ",
                "value": "none",
              },
              "ref": null,
              "rendered": " ",
              "type": [Function],
            },
            Object {
              "instance": null,
              "key": "Attacking Midfield",
              "nodeType": "class",
              "props": Object {
                "children": "Attacking Midfield",
                "value": "Attacking Midfield",
              },
              "ref": null,
              "rendered": "Attacking Midfield",
              "type": [Function],
            },
            Object {
              "instance": null,
              "key": "Central Midfield",
              "nodeType": "class",
              "props": Object {
                "children": "Central Midfield",
                "value": "Central Midfield",
              },
              "ref": null,
              "rendered": "Central Midfield",
              "type": [Function],
            },
            Object {
              "instance": null,
              "key": "Centre-Back",
              "nodeType": "class",
              "props": Object {
                "children": "Centre-Back",
                "value": "Centre-Back",
              },
              "ref": null,
              "rendered": "Centre-Back",
              "type": [Function],
            },
            Object {
              "instance": null,
              "key": "Centre-Forward",
              "nodeType": "class",
              "props": Object {
                "children": "Centre-Forward",
                "value": "Centre-Forward",
              },
              "ref": null,
              "rendered": "Centre-Forward",
              "type": [Function],
            },
            Object {
              "instance": null,
              "key": "Defensive Midfield",
              "nodeType": "class",
              "props": Object {
                "children": "Defensive Midfield",
                "value": "Defensive Midfield",
              },
              "ref": null,
              "rendered": "Defensive Midfield",
              "type": [Function],
            },
            Object {
              "instance": null,
              "key": "Keeper",
              "nodeType": "class",
              "props": Object {
                "children": "Keeper",
                "value": "Keeper",
              },
              "ref": null,
              "rendered": "Keeper",
              "type": [Function],
            },
            Object {
              "instance": null,
              "key": "Left Midfield",
              "nodeType": "class",
              "props": Object {
                "children": "Left Midfield",
                "value": "Left Midfield",
              },
              "ref": null,
              "rendered": "Left Midfield",
              "type": [Function],
            },
            Object {
              "instance": null,
              "key": "Left Wing",
              "nodeType": "class",
              "props": Object {
                "children": "Left Wing",
                "value": "Left Wing",
              },
              "ref": null,
              "rendered": "Left Wing",
              "type": [Function],
            },
            Object {
              "instance": null,
              "key": "Left-Back",
              "nodeType": "class",
              "props": Object {
                "children": "Left-Back",
                "value": "Left-Back",
              },
              "ref": null,
              "rendered": "Left-Back",
              "type": [Function],
            },
            Object {
              "instance": null,
              "key": "Right-Back",
              "nodeType": "class",
              "props": Object {
                "children": "Right-Back",
                "value": "Right-Back",
              },
              "ref": null,
              "rendered": "Right-Back",
              "type": [Function],
            },
          ],
          "type": [Function],
        },
        "type": [Function],
      },
      Object {
        "instance": null,
        "key": undefined,
        "nodeType": "class",
        "props": Object {
          "children": <WithStyles(Button)
            fullWidth={true}
            onClick={[MockFunction]}
            size="large"
            type="submit"
          >
            Search
          </WithStyles(Button)>,
          "item": true,
          "md": 3,
          "xs": 12,
        },
        "ref": null,
        "rendered": Object {
          "instance": null,
          "key": undefined,
          "nodeType": "class",
          "props": Object {
            "children": "Search",
            "fullWidth": true,
            "onClick": [MockFunction],
            "size": "large",
            "type": "submit",
          },
          "ref": null,
          "rendered": "Search",
          "type": [Function],
        },
        "type": [Function],
      },
    ],
    "type": [Function],
  },
  Symbol(enzyme.__nodes__): Array [
    Object {
      "instance": null,
      "key": undefined,
      "nodeType": "class",
      "props": Object {
        "children": Array [
          <WithStyles(Grid)
            item={true}
            md={3}
            xs={12}
          >
            <TextField
              error={false}
              fullWidth={true}
              label="Nombre"
              name="name"
              onChange={[MockFunction]}
              placeholder="Name"
              required={false}
              select={false}
              variant="standard"
            />
          </WithStyles(Grid)>,
          <WithStyles(Grid)
            item={true}
            md={3}
            xs={12}
          >
            <TextField
              fullWidth={true}
              label="Age"
              name="age"
              onChange={[MockFunction]}
              required={false}
              select={true}
              variant="standard"
            >
              <WithStyles(MenuItem)
                value="none"
              >
                 
              </WithStyles(MenuItem)>
              <WithStyles(MenuItem)
                value={18}
              >
                18
              </WithStyles(MenuItem)>
              <WithStyles(MenuItem)
                value={19}
              >
                19
              </WithStyles(MenuItem)>
              <WithStyles(MenuItem)
                value={20}
              >
                20
              </WithStyles(MenuItem)>
              <WithStyles(MenuItem)
                value={21}
              >
                21
              </WithStyles(MenuItem)>
              <WithStyles(MenuItem)
                value={22}
              >
                22
              </WithStyles(MenuItem)>
              <WithStyles(MenuItem)
                value={23}
              >
                23
              </WithStyles(MenuItem)>
              <WithStyles(MenuItem)
                value={24}
              >
                24
              </WithStyles(MenuItem)>
              <WithStyles(MenuItem)
                value={25}
              >
                25
              </WithStyles(MenuItem)>
              <WithStyles(MenuItem)
                value={26}
              >
                26
              </WithStyles(MenuItem)>
              <WithStyles(MenuItem)
                value={27}
              >
                27
              </WithStyles(MenuItem)>
              <WithStyles(MenuItem)
                value={28}
              >
                28
              </WithStyles(MenuItem)>
              <WithStyles(MenuItem)
                value={29}
              >
                29
              </WithStyles(MenuItem)>
              <WithStyles(MenuItem)
                value={30}
              >
                30
              </WithStyles(MenuItem)>
              <WithStyles(MenuItem)
                value={31}
              >
                31
              </WithStyles(MenuItem)>
              <WithStyles(MenuItem)
                value={32}
              >
                32
              </WithStyles(MenuItem)>
              <WithStyles(MenuItem)
                value={33}
              >
                33
              </WithStyles(MenuItem)>
              <WithStyles(MenuItem)
                value={34}
              >
                34
              </WithStyles(MenuItem)>
              <WithStyles(MenuItem)
                value={35}
              >
                35
              </WithStyles(MenuItem)>
              <WithStyles(MenuItem)
                value={36}
              >
                36
              </WithStyles(MenuItem)>
              <WithStyles(MenuItem)
                value={37}
              >
                37
              </WithStyles(MenuItem)>
              <WithStyles(MenuItem)
                value={38}
              >
                38
              </WithStyles(MenuItem)>
              <WithStyles(MenuItem)
                value={39}
              >
                39
              </WithStyles(MenuItem)>
              <WithStyles(MenuItem)
                value={40}
              >
                40
              </WithStyles(MenuItem)>
            </TextField>
          </WithStyles(Grid)>,
          <WithStyles(Grid)
            item={true}
            md={3}
            xs={12}
          >
            <TextField
              fullWidth={true}
              label="Position"
              name="position"
              onChange={[MockFunction]}
              required={false}
              select={true}
              variant="standard"
            >
              <WithStyles(MenuItem)
                value="none"
              >
                 
              </WithStyles(MenuItem)>
              <WithStyles(MenuItem)
                value="Attacking Midfield"
              >
                Attacking Midfield
              </WithStyles(MenuItem)>
              <WithStyles(MenuItem)
                value="Central Midfield"
              >
                Central Midfield
              </WithStyles(MenuItem)>
              <WithStyles(MenuItem)
                value="Centre-Back"
              >
                Centre-Back
              </WithStyles(MenuItem)>
              <WithStyles(MenuItem)
                value="Centre-Forward"
              >
                Centre-Forward
              </WithStyles(MenuItem)>
              <WithStyles(MenuItem)
                value="Defensive Midfield"
              >
                Defensive Midfield
              </WithStyles(MenuItem)>
              <WithStyles(MenuItem)
                value="Keeper"
              >
                Keeper
              </WithStyles(MenuItem)>
              <WithStyles(MenuItem)
                value="Left Midfield"
              >
                Left Midfield
              </WithStyles(MenuItem)>
              <WithStyles(MenuItem)
                value="Left Wing"
              >
                Left Wing
              </WithStyles(MenuItem)>
              <WithStyles(MenuItem)
                value="Left-Back"
              >
                Left-Back
              </WithStyles(MenuItem)>
              <WithStyles(MenuItem)
                value="Right-Back"
              >
                Right-Back
              </WithStyles(MenuItem)>
            </TextField>
          </WithStyles(Grid)>,
          <WithStyles(Grid)
            item={true}
            md={3}
            xs={12}
          >
            <WithStyles(Button)
              fullWidth={true}
              onClick={[MockFunction]}
              size="large"
              type="submit"
            >
              Search
            </WithStyles(Button)>
          </WithStyles(Grid)>,
        ],
        "container": true,
        "justify": "center",
        "spacing": 16,
      },
      "ref": null,
      "rendered": Array [
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "class",
          "props": Object {
            "children": <TextField
              error={false}
              fullWidth={true}
              label="Nombre"
              name="name"
              onChange={[MockFunction]}
              placeholder="Name"
              required={false}
              select={false}
              variant="standard"
            />,
            "item": true,
            "md": 3,
            "xs": 12,
          },
          "ref": null,
          "rendered": Object {
            "instance": null,
            "key": undefined,
            "nodeType": "class",
            "props": Object {
              "error": false,
              "fullWidth": true,
              "label": "Nombre",
              "name": "name",
              "onChange": [MockFunction],
              "placeholder": "Name",
              "required": false,
              "select": false,
              "value": undefined,
              "variant": "standard",
            },
            "ref": null,
            "rendered": null,
            "type": [Function],
          },
          "type": [Function],
        },
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "class",
          "props": Object {
            "children": <TextField
              fullWidth={true}
              label="Age"
              name="age"
              onChange={[MockFunction]}
              required={false}
              select={true}
              variant="standard"
            >
              <WithStyles(MenuItem)
                value="none"
              >
                 
              </WithStyles(MenuItem)>
              <WithStyles(MenuItem)
                value={18}
              >
                18
              </WithStyles(MenuItem)>
              <WithStyles(MenuItem)
                value={19}
              >
                19
              </WithStyles(MenuItem)>
              <WithStyles(MenuItem)
                value={20}
              >
                20
              </WithStyles(MenuItem)>
              <WithStyles(MenuItem)
                value={21}
              >
                21
              </WithStyles(MenuItem)>
              <WithStyles(MenuItem)
                value={22}
              >
                22
              </WithStyles(MenuItem)>
              <WithStyles(MenuItem)
                value={23}
              >
                23
              </WithStyles(MenuItem)>
              <WithStyles(MenuItem)
                value={24}
              >
                24
              </WithStyles(MenuItem)>
              <WithStyles(MenuItem)
                value={25}
              >
                25
              </WithStyles(MenuItem)>
              <WithStyles(MenuItem)
                value={26}
              >
                26
              </WithStyles(MenuItem)>
              <WithStyles(MenuItem)
                value={27}
              >
                27
              </WithStyles(MenuItem)>
              <WithStyles(MenuItem)
                value={28}
              >
                28
              </WithStyles(MenuItem)>
              <WithStyles(MenuItem)
                value={29}
              >
                29
              </WithStyles(MenuItem)>
              <WithStyles(MenuItem)
                value={30}
              >
                30
              </WithStyles(MenuItem)>
              <WithStyles(MenuItem)
                value={31}
              >
                31
              </WithStyles(MenuItem)>
              <WithStyles(MenuItem)
                value={32}
              >
                32
              </WithStyles(MenuItem)>
              <WithStyles(MenuItem)
                value={33}
              >
                33
              </WithStyles(MenuItem)>
              <WithStyles(MenuItem)
                value={34}
              >
                34
              </WithStyles(MenuItem)>
              <WithStyles(MenuItem)
                value={35}
              >
                35
              </WithStyles(MenuItem)>
              <WithStyles(MenuItem)
                value={36}
              >
                36
              </WithStyles(MenuItem)>
              <WithStyles(MenuItem)
                value={37}
              >
                37
              </WithStyles(MenuItem)>
              <WithStyles(MenuItem)
                value={38}
              >
                38
              </WithStyles(MenuItem)>
              <WithStyles(MenuItem)
                value={39}
              >
                39
              </WithStyles(MenuItem)>
              <WithStyles(MenuItem)
                value={40}
              >
                40
              </WithStyles(MenuItem)>
            </TextField>,
            "item": true,
            "md": 3,
            "xs": 12,
          },
          "ref": null,
          "rendered": Object {
            "instance": null,
            "key": undefined,
            "nodeType": "class",
            "props": Object {
              "children": Array [
                <WithStyles(MenuItem)
                  value="none"
                >
                   
                </WithStyles(MenuItem)>,
                Array [
                  <WithStyles(MenuItem)
                    value={18}
                  >
                    18
                  </WithStyles(MenuItem)>,
                  <WithStyles(MenuItem)
                    value={19}
                  >
                    19
                  </WithStyles(MenuItem)>,
                  <WithStyles(MenuItem)
                    value={20}
                  >
                    20
                  </WithStyles(MenuItem)>,
                  <WithStyles(MenuItem)
                    value={21}
                  >
                    21
                  </WithStyles(MenuItem)>,
                  <WithStyles(MenuItem)
                    value={22}
                  >
                    22
                  </WithStyles(MenuItem)>,
                  <WithStyles(MenuItem)
                    value={23}
                  >
                    23
                  </WithStyles(MenuItem)>,
                  <WithStyles(MenuItem)
                    value={24}
                  >
                    24
                  </WithStyles(MenuItem)>,
                  <WithStyles(MenuItem)
                    value={25}
                  >
                    25
                  </WithStyles(MenuItem)>,
                  <WithStyles(MenuItem)
                    value={26}
                  >
                    26
                  </WithStyles(MenuItem)>,
                  <WithStyles(MenuItem)
                    value={27}
                  >
                    27
                  </WithStyles(MenuItem)>,
                  <WithStyles(MenuItem)
                    value={28}
                  >
                    28
                  </WithStyles(MenuItem)>,
                  <WithStyles(MenuItem)
                    value={29}
                  >
                    29
                  </WithStyles(MenuItem)>,
                  <WithStyles(MenuItem)
                    value={30}
                  >
                    30
                  </WithStyles(MenuItem)>,
                  <WithStyles(MenuItem)
                    value={31}
                  >
                    31
                  </WithStyles(MenuItem)>,
                  <WithStyles(MenuItem)
                    value={32}
                  >
                    32
                  </WithStyles(MenuItem)>,
                  <WithStyles(MenuItem)
                    value={33}
                  >
                    33
                  </WithStyles(MenuItem)>,
                  <WithStyles(MenuItem)
                    value={34}
                  >
                    34
                  </WithStyles(MenuItem)>,
                  <WithStyles(MenuItem)
                    value={35}
                  >
                    35
                  </WithStyles(MenuItem)>,
                  <WithStyles(MenuItem)
                    value={36}
                  >
                    36
                  </WithStyles(MenuItem)>,
                  <WithStyles(MenuItem)
                    value={37}
                  >
                    37
                  </WithStyles(MenuItem)>,
                  <WithStyles(MenuItem)
                    value={38}
                  >
                    38
                  </WithStyles(MenuItem)>,
                  <WithStyles(MenuItem)
                    value={39}
                  >
                    39
                  </WithStyles(MenuItem)>,
                  <WithStyles(MenuItem)
                    value={40}
                  >
                    40
                  </WithStyles(MenuItem)>,
                ],
              ],
              "fullWidth": true,
              "label": "Age",
              "name": "age",
              "onChange": [MockFunction],
              "required": false,
              "select": true,
              "value": undefined,
              "variant": "standard",
            },
            "ref": null,
            "rendered": Array [
              Object {
                "instance": null,
                "key": undefined,
                "nodeType": "class",
                "props": Object {
                  "children": " ",
                  "value": "none",
                },
                "ref": null,
                "rendered": " ",
                "type": [Function],
              },
              Object {
                "instance": null,
                "key": "18",
                "nodeType": "class",
                "props": Object {
                  "children": 18,
                  "value": 18,
                },
                "ref": null,
                "rendered": 18,
                "type": [Function],
              },
              Object {
                "instance": null,
                "key": "19",
                "nodeType": "class",
                "props": Object {
                  "children": 19,
                  "value": 19,
                },
                "ref": null,
                "rendered": 19,
                "type": [Function],
              },
              Object {
                "instance": null,
                "key": "20",
                "nodeType": "class",
                "props": Object {
                  "children": 20,
                  "value": 20,
                },
                "ref": null,
                "rendered": 20,
                "type": [Function],
              },
              Object {
                "instance": null,
                "key": "21",
                "nodeType": "class",
                "props": Object {
                  "children": 21,
                  "value": 21,
                },
                "ref": null,
                "rendered": 21,
                "type": [Function],
              },
              Object {
                "instance": null,
                "key": "22",
                "nodeType": "class",
                "props": Object {
                  "children": 22,
                  "value": 22,
                },
                "ref": null,
                "rendered": 22,
                "type": [Function],
              },
              Object {
                "instance": null,
                "key": "23",
                "nodeType": "class",
                "props": Object {
                  "children": 23,
                  "value": 23,
                },
                "ref": null,
                "rendered": 23,
                "type": [Function],
              },
              Object {
                "instance": null,
                "key": "24",
                "nodeType": "class",
                "props": Object {
                  "children": 24,
                  "value": 24,
                },
                "ref": null,
                "rendered": 24,
                "type": [Function],
              },
              Object {
                "instance": null,
                "key": "25",
                "nodeType": "class",
                "props": Object {
                  "children": 25,
                  "value": 25,
                },
                "ref": null,
                "rendered": 25,
                "type": [Function],
              },
              Object {
                "instance": null,
                "key": "26",
                "nodeType": "class",
                "props": Object {
                  "children": 26,
                  "value": 26,
                },
                "ref": null,
                "rendered": 26,
                "type": [Function],
              },
              Object {
                "instance": null,
                "key": "27",
                "nodeType": "class",
                "props": Object {
                  "children": 27,
                  "value": 27,
                },
                "ref": null,
                "rendered": 27,
                "type": [Function],
              },
              Object {
                "instance": null,
                "key": "28",
                "nodeType": "class",
                "props": Object {
                  "children": 28,
                  "value": 28,
                },
                "ref": null,
                "rendered": 28,
                "type": [Function],
              },
              Object {
                "instance": null,
                "key": "29",
                "nodeType": "class",
                "props": Object {
                  "children": 29,
                  "value": 29,
                },
                "ref": null,
                "rendered": 29,
                "type": [Function],
              },
              Object {
                "instance": null,
                "key": "30",
                "nodeType": "class",
                "props": Object {
                  "children": 30,
                  "value": 30,
                },
                "ref": null,
                "rendered": 30,
                "type": [Function],
              },
              Object {
                "instance": null,
                "key": "31",
                "nodeType": "class",
                "props": Object {
                  "children": 31,
                  "value": 31,
                },
                "ref": null,
                "rendered": 31,
                "type": [Function],
              },
              Object {
                "instance": null,
                "key": "32",
                "nodeType": "class",
                "props": Object {
                  "children": 32,
                  "value": 32,
                },
                "ref": null,
                "rendered": 32,
                "type": [Function],
              },
              Object {
                "instance": null,
                "key": "33",
                "nodeType": "class",
                "props": Object {
                  "children": 33,
                  "value": 33,
                },
                "ref": null,
                "rendered": 33,
                "type": [Function],
              },
              Object {
                "instance": null,
                "key": "34",
                "nodeType": "class",
                "props": Object {
                  "children": 34,
                  "value": 34,
                },
                "ref": null,
                "rendered": 34,
                "type": [Function],
              },
              Object {
                "instance": null,
                "key": "35",
                "nodeType": "class",
                "props": Object {
                  "children": 35,
                  "value": 35,
                },
                "ref": null,
                "rendered": 35,
                "type": [Function],
              },
              Object {
                "instance": null,
                "key": "36",
                "nodeType": "class",
                "props": Object {
                  "children": 36,
                  "value": 36,
                },
                "ref": null,
                "rendered": 36,
                "type": [Function],
              },
              Object {
                "instance": null,
                "key": "37",
                "nodeType": "class",
                "props": Object {
                  "children": 37,
                  "value": 37,
                },
                "ref": null,
                "rendered": 37,
                "type": [Function],
              },
              Object {
                "instance": null,
                "key": "38",
                "nodeType": "class",
                "props": Object {
                  "children": 38,
                  "value": 38,
                },
                "ref": null,
                "rendered": 38,
                "type": [Function],
              },
              Object {
                "instance": null,
                "key": "39",
                "nodeType": "class",
                "props": Object {
                  "children": 39,
                  "value": 39,
                },
                "ref": null,
                "rendered": 39,
                "type": [Function],
              },
              Object {
                "instance": null,
                "key": "40",
                "nodeType": "class",
                "props": Object {
                  "children": 40,
                  "value": 40,
                },
                "ref": null,
                "rendered": 40,
                "type": [Function],
              },
            ],
            "type": [Function],
          },
          "type": [Function],
        },
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "class",
          "props": Object {
            "children": <TextField
              fullWidth={true}
              label="Position"
              name="position"
              onChange={[MockFunction]}
              required={false}
              select={true}
              variant="standard"
            >
              <WithStyles(MenuItem)
                value="none"
              >
                 
              </WithStyles(MenuItem)>
              <WithStyles(MenuItem)
                value="Attacking Midfield"
              >
                Attacking Midfield
              </WithStyles(MenuItem)>
              <WithStyles(MenuItem)
                value="Central Midfield"
              >
                Central Midfield
              </WithStyles(MenuItem)>
              <WithStyles(MenuItem)
                value="Centre-Back"
              >
                Centre-Back
              </WithStyles(MenuItem)>
              <WithStyles(MenuItem)
                value="Centre-Forward"
              >
                Centre-Forward
              </WithStyles(MenuItem)>
              <WithStyles(MenuItem)
                value="Defensive Midfield"
              >
                Defensive Midfield
              </WithStyles(MenuItem)>
              <WithStyles(MenuItem)
                value="Keeper"
              >
                Keeper
              </WithStyles(MenuItem)>
              <WithStyles(MenuItem)
                value="Left Midfield"
              >
                Left Midfield
              </WithStyles(MenuItem)>
              <WithStyles(MenuItem)
                value="Left Wing"
              >
                Left Wing
              </WithStyles(MenuItem)>
              <WithStyles(MenuItem)
                value="Left-Back"
              >
                Left-Back
              </WithStyles(MenuItem)>
              <WithStyles(MenuItem)
                value="Right-Back"
              >
                Right-Back
              </WithStyles(MenuItem)>
            </TextField>,
            "item": true,
            "md": 3,
            "xs": 12,
          },
          "ref": null,
          "rendered": Object {
            "instance": null,
            "key": undefined,
            "nodeType": "class",
            "props": Object {
              "children": Array [
                <WithStyles(MenuItem)
                  value="none"
                >
                   
                </WithStyles(MenuItem)>,
                Array [
                  <WithStyles(MenuItem)
                    value="Attacking Midfield"
                  >
                    Attacking Midfield
                  </WithStyles(MenuItem)>,
                  <WithStyles(MenuItem)
                    value="Central Midfield"
                  >
                    Central Midfield
                  </WithStyles(MenuItem)>,
                  <WithStyles(MenuItem)
                    value="Centre-Back"
                  >
                    Centre-Back
                  </WithStyles(MenuItem)>,
                  <WithStyles(MenuItem)
                    value="Centre-Forward"
                  >
                    Centre-Forward
                  </WithStyles(MenuItem)>,
                  <WithStyles(MenuItem)
                    value="Defensive Midfield"
                  >
                    Defensive Midfield
                  </WithStyles(MenuItem)>,
                  <WithStyles(MenuItem)
                    value="Keeper"
                  >
                    Keeper
                  </WithStyles(MenuItem)>,
                  <WithStyles(MenuItem)
                    value="Left Midfield"
                  >
                    Left Midfield
                  </WithStyles(MenuItem)>,
                  <WithStyles(MenuItem)
                    value="Left Wing"
                  >
                    Left Wing
                  </WithStyles(MenuItem)>,
                  <WithStyles(MenuItem)
                    value="Left-Back"
                  >
                    Left-Back
                  </WithStyles(MenuItem)>,
                  <WithStyles(MenuItem)
                    value="Right-Back"
                  >
                    Right-Back
                  </WithStyles(MenuItem)>,
                ],
              ],
              "fullWidth": true,
              "label": "Position",
              "name": "position",
              "onChange": [MockFunction],
              "required": false,
              "select": true,
              "value": undefined,
              "variant": "standard",
            },
            "ref": null,
            "rendered": Array [
              Object {
                "instance": null,
                "key": undefined,
                "nodeType": "class",
                "props": Object {
                  "children": " ",
                  "value": "none",
                },
                "ref": null,
                "rendered": " ",
                "type": [Function],
              },
              Object {
                "instance": null,
                "key": "Attacking Midfield",
                "nodeType": "class",
                "props": Object {
                  "children": "Attacking Midfield",
                  "value": "Attacking Midfield",
                },
                "ref": null,
                "rendered": "Attacking Midfield",
                "type": [Function],
              },
              Object {
                "instance": null,
                "key": "Central Midfield",
                "nodeType": "class",
                "props": Object {
                  "children": "Central Midfield",
                  "value": "Central Midfield",
                },
                "ref": null,
                "rendered": "Central Midfield",
                "type": [Function],
              },
              Object {
                "instance": null,
                "key": "Centre-Back",
                "nodeType": "class",
                "props": Object {
                  "children": "Centre-Back",
                  "value": "Centre-Back",
                },
                "ref": null,
                "rendered": "Centre-Back",
                "type": [Function],
              },
              Object {
                "instance": null,
                "key": "Centre-Forward",
                "nodeType": "class",
                "props": Object {
                  "children": "Centre-Forward",
                  "value": "Centre-Forward",
                },
                "ref": null,
                "rendered": "Centre-Forward",
                "type": [Function],
              },
              Object {
                "instance": null,
                "key": "Defensive Midfield",
                "nodeType": "class",
                "props": Object {
                  "children": "Defensive Midfield",
                  "value": "Defensive Midfield",
                },
                "ref": null,
                "rendered": "Defensive Midfield",
                "type": [Function],
              },
              Object {
                "instance": null,
                "key": "Keeper",
                "nodeType": "class",
                "props": Object {
                  "children": "Keeper",
                  "value": "Keeper",
                },
                "ref": null,
                "rendered": "Keeper",
                "type": [Function],
              },
              Object {
                "instance": null,
                "key": "Left Midfield",
                "nodeType": "class",
                "props": Object {
                  "children": "Left Midfield",
                  "value": "Left Midfield",
                },
                "ref": null,
                "rendered": "Left Midfield",
                "type": [Function],
              },
              Object {
                "instance": null,
                "key": "Left Wing",
                "nodeType": "class",
                "props": Object {
                  "children": "Left Wing",
                  "value": "Left Wing",
                },
                "ref": null,
                "rendered": "Left Wing",
                "type": [Function],
              },
              Object {
                "instance": null,
                "key": "Left-Back",
                "nodeType": "class",
                "props": Object {
                  "children": "Left-Back",
                  "value": "Left-Back",
                },
                "ref": null,
                "rendered": "Left-Back",
                "type": [Function],
              },
              Object {
                "instance": null,
                "key": "Right-Back",
                "nodeType": "class",
                "props": Object {
                  "children": "Right-Back",
                  "value": "Right-Back",
                },
                "ref": null,
                "rendered": "Right-Back",
                "type": [Function],
              },
            ],
            "type": [Function],
          },
          "type": [Function],
        },
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "class",
          "props": Object {
            "children": <WithStyles(Button)
              fullWidth={true}
              onClick={[MockFunction]}
              size="large"
              type="submit"
            >
              Search
            </WithStyles(Button)>,
            "item": true,
            "md": 3,
            "xs": 12,
          },
          "ref": null,
          "rendered": Object {
            "instance": null,
            "key": undefined,
            "nodeType": "class",
            "props": Object {
              "children": "Search",
              "fullWidth": true,
              "onClick": [MockFunction],
              "size": "large",
              "type": "submit",
            },
            "ref": null,
            "rendered": "Search",
            "type": [Function],
          },
          "type": [Function],
        },
      ],
      "type": [Function],
    },
  ],
  Symbol(enzyme.__options__): Object {
    "adapter": ReactSixteenAdapter {
      "options": Object {
        "enableComponentDidUpdateOnSetState": true,
        "legacyContextMode": "parent",
        "lifecycles": Object {
          "componentDidUpdate": Object {
            "onSetState": true,
          },
          "getChildContext": Object {
            "calledByRenderer": false,
          },
          "getDerivedStateFromProps": Object {
            "hasShouldComponentUpdateBug": false,
          },
          "getSnapshotBeforeUpdate": true,
          "setState": Object {
            "skipsComponentDidUpdateOnNullish": true,
          },
        },
      },
    },
  },
}
`;
